// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$myTakeWeb-primary: mat.define-palette(mat.$teal-palette);
$myTakeWeb-accent: mat.define-palette(mat.$indigo-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$myTakeWeb-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$myTakeWeb-theme: mat.define-light-theme(
	(
		color: (
			primary: $myTakeWeb-primary,
			accent: $myTakeWeb-accent,
			warn: $myTakeWeb-warn,
		),
	)
);

$myTakeWeb-dark-theme: mat.define-dark-theme(
	(
		color: (
			primary: $myTakeWeb-primary,
			accent: $myTakeWeb-accent,
			warn: $myTakeWeb-warn,
		),
		typography: mat.define-typography-config(),
		density: 0,
	)
);

// Apply the dark theme by default
@include mat.all-component-themes($myTakeWeb-dark-theme);

// Apply the light theme only when the user prefers light themes.
@media (prefers-color-scheme: light) {
	// Use the `-color` mixins to only apply color styles without reapplying the same
	// typography and density styles.
	@include mat.all-component-themes($myTakeWeb-theme);
}

@import 'bootstrap/dist/css/bootstrap-grid.min.css';
@import 'bootstrap/dist/css/bootstrap-utilities.min.css';

html,
body {
	height: 100%;
}
body {
	margin: 0;
	font-family: Roboto, 'Helvetica Neue', sans-serif;
}
